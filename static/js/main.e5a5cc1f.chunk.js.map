{"version":3,"sources":["components/ContactForm.js","components/ContactItem.js","components/ContactsList.js","components/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","contactChange","target","value","setState","console","log","formSubmit","e","preventDefault","props","submit","this","onSubmit","placeholder","type","onChange","pattern","title","required","className","Component","ContactItem","list","deleteItem","map","id","onClick","ContactsList","children","Filter","filter","change","App","contacts","inputChange","handleSubmit","newContact","shortid","generate","some","item","alert","prevState","filterChange","toLowerCase","includes","onDeleteClick","targetId","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5a5cc1f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  contactChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n    console.log(value);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.submit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.formSubmit}>\n        <input\n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.contactChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <input\n          className=\"number-input\"\n          placeholder=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={this.contactChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <button type=\"submit\">Add to contacts</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactItem = ({ list, deleteItem }) => (\n  <ul>\n    {list.map(({ id, name, number }) => (\n      <li key={id}>\n        {name}: {number}\n        <button onClick={() => deleteItem(id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactItem.propTypes = {\n  list: PropTypes.array.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\n\nconst ContactsList = ({ children }) => <ul>{children}</ul>;\n\nexport default ContactsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, change }) => (\n  <label>\n    Find contacts by name:\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={change}\n      className=\"filter-input\"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  change: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactItem from \"./components/ContactItem\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  inputChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n    console.log(value);\n  };\n\n  handleSubmit = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const newContact = [\n      {\n        id: shortid.generate(),\n        name: name,\n        number: number,\n      },\n    ];\n\n    contacts.some((item) => item.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [...prevState.contacts, ...newContact],\n        }));\n  };\n\n  filterChange = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  onDeleteClick = (targetId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((item) => item.id !== targetId),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.filterChange();\n\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm submit={this.handleSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.filter} change={this.inputChange} />\n\n        <ContactsList>\n          <ContactItem\n            list={filteredContacts}\n            deleteItem={this.onDeleteClick}\n          />\n        </ContactsList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}